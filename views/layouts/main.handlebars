<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"
	 crossorigin="anonymous">
	 <link rel="stylesheet" href="/assets/css/reset.css" type="text/css">
	<link rel="stylesheet" href="/assets/css/style.css" type="text/css">
	<title>BAZ</title>
	<meta name="viewport" content="width=device-width, initial-scale=1">
</head>

<body>
	<header class="jumbotron text-center">
    	<h1>BAZ</h1>
	</header>

	<div class="container">
		{{{ body }}}
	</div>

	<script src="https://www.gstatic.com/firebasejs/4.6.2/firebase.js"></script>
	<script>
		// initializes firebase
		var config = {
	    	apiKey: "AIzaSyDWuWMSBzJUA2CZYSWUMkgoBSCf7n3yNVA",
	    	authDomain: "barter-app-9fb57.firebaseapp.com",
	    	databaseURL: "https://barter-app-9fb57.firebaseio.com",
	    	projectId: "barter-app-9fb57",
	    	storageBucket: "barter-app-9fb57.appspot.com",
	    	messagingSenderId: "127264274079"
		};
		firebase.initializeApp(config);

		// get elements
		var txtEmail = document.getElementById("txtEmail");
		var txtPassword = document.getElementById("txtPassword");
		var btnLogin = document.getElementById("btnLogin");
		var btnSignUp = document.getElementById("btnSignUp");
		var btnLogOut = document.getElementById("btnLogOut");

		// adds an event listener for "Log in" button
		btnLogin.addEventListener("click", e => {
			// gets the email and password
			var email = txtEmail.value;
			var password = txtPassword.value;
			var auth = firebase.auth();

			var promise = auth.signInWithEmailAndPassword(email, password);
			promise.catch(error => console.log(error.message));
		});

		// adds an event listener for "Sign up" button
		btnSignUp.addEventListener("click", e => {
			// gets the email and password
			var email = txtEmail.value;
			var password = txtPassword.value;
			var auth = firebase.auth();

			var promise = auth.createUserWithEmailAndPassword(email, password);
			promise.catch(error => console.log(error.message));
		});

		// // adds an event listener for "Sign in with Google" button
		// btnGoogle.addEventListener("click", e => {
		// 	// creates an instance of the Google provider object
		// 	var provider = new firebase.auth.GoogleAuthProvider();

		// 	firebase.auth().signInWithPopup(provider).then(function(result) {
		// 		// provides a Google Access Token used to access the Google API
		// 	  	var token = result.credential.accessToken;
		// 	  	// the signed-in user info
		// 	  	var user = result.user;
		// 	}).catch(function(error) {
		// 	  	// handles errors here
		// 	  	var errorCode = error.code;
		// 	  	var errorMessage = error.message;
		// 	  	// the email of the user's account used
		// 	  	var email = error.email;
		// 	  	// the firebase.auth.AuthCredential type that was used
		// 	  	var credential = error.credential;
		// 	});
		// });

		// adds an event listener for "Log out" button
		btnLogOut.addEventListener("click", e => {
			firebase.auth().signOut();
		});

		// adds a realtime authentication listener
		firebase.auth().onAuthStateChanged(firebaseUser => {
			if (firebaseUser) {
				console.log(firebaseUser);
				btnLogOut.classList.remove("hide"); // if the user is logged in, the Log Out button is no longer hidden
			} else {
				console.log("Not logged in.");
				btnLogOut.classList.add("hide"); // if the user is logged out, the Log Out button is hidden
			}
		});

	</script>
</body>
</html>